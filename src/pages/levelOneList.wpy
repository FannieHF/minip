<template>
  <view class="page">
    <view class="page__bd">

      <!-- filter -->
      <view class="filterBar"> 

        <view class="weui-cell__bd dateTime-filter">
          <picker bindchange="bindPickerChange" id="dateIndex" value="{{dateArray[dateIndex]}}" range="{{dateArray}}">
            <view class="weui-select">时间: {{dateArray[dateIndex]}}</view>
          </picker>
        </view>
        <view class="weui-cell__bd weui-cell__bd_in-select-before status-filter">
          <picker bindchange="bindPickerChange" id="statusIndex" value="{{statusArray[statusIndex]}}" range="{{statusArray}}">
            <view class="weui-select">状态: {{statusArray[statusIndex]}}</view>
          </picker>
        </view>

      </view>

      <!-- 页面内容 -->
      <view class="scroll_bd">       
        <repeat for="{{statusList}}" key="id" item="item">

          <view class="kind-list__item">
            <SlideCard :item="item" :level="level"
              class="weui-media-box_appmsg {{item.open ? 'kind-list__item-hd_show' : ''}}">
            
              <view slot="constant-content" class="weui-cell"
              style=" border-color: {{priority.borderColor(item.priority)}}" >

                <view class="complete-content">
                  <progressCircle :item="item" />
                </view>

                <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                  <view class="weui-media-box__title">{{item.name}}</view>
                  <view class="weui-media-box__desc">
                    <view wx:if="{{item.owner}}" class="weui-media-box__flex">一号位: {{item.owner}}</view>
                    <view wx:else class="weui-media-box__flex">一号位: 无</view>
                    
                    <view wx:if="{{item.status === 1}}" class="weui-media-box__flex"> 状态: 待处理</view>
                    <view wx:elif="{{item.status === 2}}" class="weui-media-box__flex"> 状态: 进行中</view>
                    <view wx:elif="{{item.status === 3}}" class="weui-media-box__flex"> 状态: 已完成</view>
                    <view wx:else class="weui-media-box__flex"> 状态: 已终止</view>
                  </view>
                </view>
                
              </view>
            </SlideCard>

            <view class="kind-list__item-bd {{item.open ? 'kind-list__item-bd_show' : ''}}">
              <view class="weui-cells {{item.open ? 'weui-cells_show' : ''}}">
                <repeat for="{{item.children}}" key="index" item="child">
                  <navigator url="/pages/editWithComment?level=2&itemId={{child.id}}&name={{child.name}}" class="weui-cell"  hover-class="weui-cell_active"
                    style=" border-color: {{priority.borderColor(child.priority)}}" >
                    
                    <view class="complete-content">
                      <progressCircle :item="child" />
                    </view>

                    <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                      <view class="weui-media-box__title">{{child.name}}</view>
                      <view class="weui-media-box__desc">
                        <view wx:if="{{child.owner}}" class="weui-media-box__flex">一号位: {{child.owner}}</view>
                        <view wx:else class="weui-media-box__flex">一号位: 无</view>
                        <view wx:if="{{child.status === 1}}" class="weui-media-box__flex"> 状态: 待处理</view>
                        <view wx:elif="{{child.status === 2}}" class="weui-media-box__flex"> 状态: 进行中</view>
                        <view wx:elif="{{child.status === 3}}" class="weui-media-box__flex"> 状态: 已完成</view>
                        <view wx:else class="weui-media-box__flex"> 状态: 已终止</view>
                      </view>
                    </view>
                    
                  </navigator>
                </repeat>

                <!-- 新增 -->
                <navigator url="/pages/newGoal?level=2&parentId={{item.id}}&name=二级目标" class="add-navigator">
                  <image class="add-image weui-flex__item" src="../images/icon/add.svg" mode="aspectFit"/>
                </navigator>
              </view>
            </view>
          </view>

        </repeat>
      </view>

      <view class="fixed_panel">
        <navigator url="/pages/newGoal?level=1&parentId={{parentId}}&name=一级目标" class="weui-media-box weui-media-box_appmsg">
          <image class="add-image weui-flex__item" src="../images/icon/add.svg" mode="aspectFit"/>
        </navigator>
      </view>

    </view>
  </view>

  <toast /> 
</template>

<script>
  import wepy from 'wepy'
  import toast from 'wepy-com-toast'
  import moment from 'moment'
  import SlideCard from '../components/card'
  import progressCircle from '../components/progressCircle'
  import { service } from '../config'
  import toastMixin from '../mixins/toast'
  import priorwxs from '../wxs/priorityColor.wxs'

  export default class levelOne extends wepy.page {
    mixins = [toastMixin]
    config = {
      navigationBarBackgroundColor: '#115765',
      navigationBarTitleText: '一级目标'
    }
    data = {
      parentId: undefined,
      level: 1,
      statusList: undefined,
      url: undefined,
      dateIndex: 0,
      statusIndex: 0,
      dateArray: ['全部', '周', '月', '季'],
      dateCode: ['', 'w', 'M', 'Q'],
      statusArray: ['全部', '待处理', '进行中', '已完成'],
      openCard: undefined // 控制页面返回后，打开list仍然开启,
    }
    wxs = {
      priority: priorwxs
    }

    async getTaskList(parentId, findChild, date, status) {
      let data = [{
        'attrName': 'parent.id',
        'operator': 'EQ',
        'attrValue': parentId
      }]
      if (date > 0) {
        data.push({
          'attrName': 'actualStartDate',
          'operator': 'GTE',
          'attrValue': moment().subtract(1, this.dateCode[date]).format('YYYY-MM-DD')
        })
      }
      if (status > 0) {
        data.push({
          'attrName': 'status',
          'operator': 'EQ',
          'attrValue': parseInt(status)
        })
      }
      return wepy.request({
        url: service.searchGoal,
        data,
        method: 'POST',
        header: wepy.$instance.globalData.header
      }).then(({data}) => {
        if (data.status === 0) {
          if (findChild) return data.value
          else {
            this.setStructure(data.value, parentId)
          }
        } else {
          this.showToast(data.msg)
        }
      })
    }

    setStructure(receiveList, parentId) {
      let statusList = []
      if (receiveList.length === 0) {
        this.showToast('暂无目标, 请添加')
      } else {
        for (let key in receiveList) {
          let item = {}
          item.id = receiveList[key].id
          item.name = receiveList[key].name
          item.status = receiveList[key].status
          item.owner = receiveList[key].owner && receiveList[key].owner.name
          item.priority = receiveList[key].priority
          item.complete = receiveList[key].complete
          item.open = false
          item.children = []
          statusList.push(item)
        }
        this.parentId = parentId
      }
      this.statusList = statusList
      this.$apply()
    }

    async kindToggle(id) {
      let list = [].concat(this.statusList)
      for (var i = 0, len = list.length; i < len; ++i) {
        if (list[i].id === id) {
          list[i].open = !list[i].open
          if (list[i].open === true && list[i].children.length === 0) {
            this.openCard = list[i].id
            let children = await this.getTaskList(list[i].id, true)

            let childrenRestruct = []
            if (children.length !== 0) {
              for (var j = 0, lenJ = children.length; j < lenJ; ++j) {
                childrenRestruct.push({
                  id: children[j].id,
                  name: children[j].name,
                  priority: children[j].priority,
                  complete: children[j].complete,
                  owner: children[j].owner && children[j].owner.name,
                  status: children[j].status
                })
              }
              list[i].children = childrenRestruct
            }
          } else {
            this.openCard = undefined
          }
        } else {
          list[i].open = false
        }
      }
      this.statusList = list
      this.$apply()
    }

    events = {
      'tapCard': ($event, data) => {
        this.kindToggle(data.source.item.id)
      }
    }

    onLoad(options) {
      if (options.parentId) {
        this.parentId = options.parentId
      }
      // this.getTaskList(this.parentId, false)
      // for (let key of statusList) {
      //   this.drawProgressbg(key.id, this.status)
      //   this.drawProgressCircle(key.id, this.status, key.complete)
      // }
    }

    async onShow() {
      await this.getTaskList(this.parentId, false)
      if (this.openCard) {
        this.kindToggle(this.openCard)
      }
    }

    components = {
      SlideCard,
      toast,
      progressCircle
    }
    methods = {
      bindPickerChange(e) {
        this[e.currentTarget.id] = e.detail.value
        this.getTaskList(this.parentId, false, this.dateIndex, this.statusIndex)
      }
    }
  }
</script>

<style lang="less">
  page{
    width: 100%;
    height: 100%;
  }
  .page,
  .page__bd{
    height: 100%;
  }
  .page__bd{
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
  }

  .filterBar {
    display: flex;
    background-color: #BED8CA;
    font-size: 30rpx;

    .weui-cell__bd {
      flex: 1
    }
  }
  .scroll_bd{
    flex: 10;
    box-sizing: border-box;
    padding-bottom: 120rpx;
    padding-top: 20rpx;
    overflow-y: scroll; 

    .weui-cell {
      display: flex;
      width: 100%;
      box-sizing: border-box;
      border-width: 0px 0px 0px 10px;
      border-style: solid; 
      border-color: #46515D;
      padding: 30rpx 0px;
    }
    .weui-media-box__desc {
      color: #DDDDDD;
      display: flex;
      justify-content: flex-start;
      text-overflow: ellipsis;
    }
    .weui-media-box__flex{
      margin-right: 10px;
    }

    /** progress-circle */
    .complete-content {
      width: 120rpx;
      height: 120rpx;
      padding-right: 4rpx;
      text-align: center;
    }
    
  }

  .kind-list__item{
    margin: 40rpx 0;
    border-radius: 4rpx;
    overflow: hidden;
    &:first-child{
      margin-top: 0;
    }
  }
  .kind-list__img{
    width: 60rpx;
    height: 60rpx;
  }

  .kind-list__item-hd{
    padding: 20px;
    transition: opacity .3s;
    &_show .weconstant-side{
      background-color: blue; 
    }
  }

  // 二级子目标样式
  .kind-list__item-bd{
    background-color: #6A7884; 
    border-width: 0px;
    box-sizing: border-box;
    height: 0;
    overflow: hidden;
    &_show{
      height: auto;
    }

    .weui-cells {
      margin-top: 0px;
    }
    .weui-cell {
      background-color: #6A7884; 
      color: #fff;
      display: flex;
      width: 100%;
      box-sizing: border-box;
      border-width: 0px 0px 0px 10px;
      border-style: solid; 
      padding: 0px;
    }

    .add-navigator{
      text-align: center;
      background-color: #fff;
      height: 70rpx;
      padding: 20rpx 0px;

      .add-image {
        max-width: 70rpx;
        height: 70rpx;
      }
    }

  }


  .fixed_panel {  
    background-color: #DDDDDD;
    position: fixed;
    height: 100rpx;
    bottom: 0px;
    width: 100%;
    text-align: center;
    display: flex;
    justify-content: center;

    .add-image{
      backgroud-color: #46515D;
      max-width: 100rpx;
      height: 100rpx;
      transform: translateY(-40rpx);
    }
  }


</style>
